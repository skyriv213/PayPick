name: Deploy Frontend to EC2

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up environment variables
      run: |  
        cd ./fe
        touch .env
        echo "NEXT_PUBLIC_NAVER_MAP_ID=${{ secrets.NEXT_PUBLIC_NAVER_MAP_ID }}" > ./.env
      shell: bash

    - name: Install SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa

    - name: Create known_hosts file if not exists
      run: |
        if [ ! -f ~/.ssh/known_hosts ]; then
          touch ~/.ssh/known_hosts
        fi

    - name: Add EC2 to known_hosts
      run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.FE_DOCKER_USERNAME }}
        password: ${{ secrets.FE_DOCKER_PASSWORD }}

    - name: Build frontend Docker image
      run: |
        docker build -t benidene/paypick-nextjs-app -f ./fe/Dockerfile ./fe


    - name: Push Docker image to DockerHub
      run: |
        docker push benidene/paypick-nextjs-app

    - name: Deploy to EC2 via SSH and Docker
      run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # 기존 Docker 컨테이너 중지 및 삭제 (존재하는 경우에만)
            docker stop next-app || true
            docker rm next-app || true
            
           # 최신 Docker 이미지로 새로운 컨테이너 실행
            docker pull benidene/paypick-nextjs-app
            docker run -d -p 80:3000 -p 443:3001 --name next-app benidene/paypick-nextjs-app
          EOF
