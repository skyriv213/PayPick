version : '3.8'

volumes:
  paypick-data: {}
  paypick-logs: { }  # 여기에 paypick-logs 볼륨을 추가


services:
  frontend:
    # build:
    #   context: ./fe
    #   dockerfile: Dockerfile
    container_name: paypick_nextjs
    image : benidene/paypick-nextjs-app
    platform: linux/amd64  # 추가된 라인
    ports:
      - "3000:3000"

  nginx:
    image: nginx:latest
    container_name: nginx
    platform: linux/amd64  # 추가된 라인
    ports:
      - "80:80"      # HTTP 포트
      - "443:443"    # HTTPS 포트
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Nginx 설정 파일
      - ./nginx/localhost.crt:/etc/nginx/localhost.crt  # SSL 인증서
      - ./nginx/localhost-key.pem:/etc/nginx/localhost-key.pem  # SSL 키
    depends_on:
      - backend     # 'backend' 서비스가 준비된 후에 Nginx가 시작됨

  database:
    image: mysql:8.0
    platform: linux/amd64  # 추가된 라인
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: ana
    ports:
      - 3306:3306
    volumes:
      - paypick-data:/var/lib/mysql

  backend:
    # build:
    #   context: ./be
    #   dockerfile: Dockerfile
    container_name: paypick_spring
    image : skyriv213/paypick
    platform: linux/amd64  # 수정된 라인
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://database:3306/ana?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234

      # http 포트 연결
      SERVER_PORT: 8080
      # SERVER_SSL_KEY_STORE: /etc/ssl/localhost.p12
      # SERVER_SSL_KEY_STORE_PASSWORD: 8759
      # SERVER_SSL_KEY_STORE_TYPE: PKCS12
#      SERVER_SSL_KEY_ALIAS: myapp
    ports:
      - 8080:8080
    volumes:
      - paypick-logs:/app/logs  # 로그 파일 저장을 위한 볼륨 마운트 추가
    depends_on:
      - database